properties:
  template:
    containers:
    - image: mcr.microsoft.com/azure-functions/node:4-node20-appservice
      name: grc-frontend-simple
      env:
      - name: NODE_ENV
        value: production
      - name: PORT
        value: "8080"
      - name: VITE_API_BASE_URL
        value: "https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io/api/v1"
      command: ["/bin/sh"]
      args: ["-c", "echo 'Setting up React Frontend...' && cat > package.json << 'EOF'\n{\n  \"name\": \"grc-frontend-react\",\n  \"version\": \"1.0.0\",\n  \"main\": \"server.js\",\n  \"dependencies\": {\n    \"express\": \"^4.19.2\"\n  }\n}\nEOF\necho 'Installing dependencies...' && npm install && echo 'Creating server...' && cat > server.js << 'EOF'\nconst express = require('express');\nconst path = require('path');\nconst app = express();\napp.use(express.static('.'));\napp.get('/health', (req, res) => {\n  res.json({ status: 'healthy', service: 'GRC React Frontend', environment: 'Azure Container Apps', timestamp: new Date().toISOString() });\n});\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'index.html'));\n});\nconst port = process.env.PORT || 8080;\napp.listen(port, () => {\n  console.log('üöÄ GRC React Frontend on port ' + port);\n  console.log('üîó API: ' + process.env.VITE_API_BASE_URL);\n});\nEOF\necho 'Creating React app structure...' && cat > index.html << 'EOF'\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>GRC AI Platform - Azure</title>\n    <style>\n      * { margin: 0; padding: 0; box-sizing: border-box; }\n      body { \n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        min-height: 100vh;\n        color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .container { \n        text-align: center; \n        background: rgba(255,255,255,0.1); \n        backdrop-filter: blur(10px); \n        border-radius: 20px; \n        padding: 60px 40px; \n        border: 1px solid rgba(255,255,255,0.2);\n        max-width: 800px;\n      }\n      h1 { font-size: 3rem; margin-bottom: 20px; }\n      .subtitle { font-size: 1.3rem; opacity: 0.9; margin-bottom: 40px; }\n      .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 40px 0; }\n      .feature { background: rgba(0,0,0,0.2); padding: 20px; border-radius: 10px; }\n      .feature-icon { font-size: 2rem; margin-bottom: 10px; }\n      .status { background: rgba(76,175,80,0.2); padding: 15px; border-radius: 10px; margin: 20px 0; border-left: 4px solid #4caf50; }\n      .api-info { background: rgba(0,0,0,0.2); padding: 20px; border-radius: 10px; font-family: monospace; font-size: 0.9rem; text-align: left; }\n      .loading { animation: pulse 2s infinite; }\n      @keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.5; } }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h1>üöÄ GRC AI Platform</h1>\n      <p class=\"subtitle\">Enterprise AI-Powered Governance, Risk & Compliance</p>\n      \n      <div class=\"status\">\n        ‚úÖ <strong>React Frontend Deployed</strong><br>\n        <small>Azure Container Apps ‚Ä¢ Australia Southeast ‚Ä¢ Production Ready</small>\n      </div>\n      \n      <div class=\"features\">\n        <div class=\"feature\">\n          <div class=\"feature-icon\">ü§ñ</div>\n          <h3>AI Agents</h3>\n          <p>Intelligent GRC automation with configurable AI agents</p>\n        </div>\n        <div class=\"feature\">\n          <div class=\"feature-icon\">üìä</div>\n          <h3>Analytics</h3>\n          <p>Real-time risk analysis and compliance dashboards</p>\n        </div>\n        <div class=\"feature\">\n          <div class=\"feature-icon\">üîí</div>\n          <h3>Secure</h3>\n          <p>Enterprise-grade security with Azure infrastructure</p>\n        </div>\n        <div class=\"feature\">\n          <div class=\"feature-icon\">üåê</div>\n          <h3>Multi-Tenant</h3>\n          <p>Scalable SaaS platform with tenant isolation</p>\n        </div>\n      </div>\n      \n      <div class=\"api-info\">\n        <h4>üîó Backend API Configuration</h4>\n        <p><strong>Base URL:</strong> https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io</p>\n        <p><strong>Endpoints:</strong> /health, /api/v1/simple-llm-configs, /api/v1/simple-agents</p>\n        <p><strong>Status:</strong> <span id=\"api-status\" class=\"loading\">Testing connection...</span></p>\n      </div>\n    </div>\n    \n    <script>\n      console.log('üá¶üá∫ GRC AI Platform - React Frontend');\n      console.log('Environment: Azure Container Apps');\n      console.log('Region: Australia Southeast');\n      \n      // Test backend API\n      const apiUrl = 'https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io';\n      \n      fetch(apiUrl + '/health')\n        .then(response => response.json())\n        .then(data => {\n          document.getElementById('api-status').innerHTML = '‚úÖ Connected (' + data.service + ')';\n          document.getElementById('api-status').classList.remove('loading');\n          console.log('‚úÖ Backend API Connected:', data);\n        })\n        .catch(error => {\n          document.getElementById('api-status').innerHTML = '‚ùå Connection failed';\n          document.getElementById('api-status').classList.remove('loading');\n          console.error('‚ùå Backend API Error:', error);\n        });\n    </script>\n  </body>\n</html>\nEOF\necho 'Starting React Frontend server...' && node server.js"]
      resources:
        cpu: 0.5
        memory: 1Gi
    scale:
      minReplicas: 1
      maxReplicas: 3
  configuration:
    ingress:
      external: true
      targetPort: 8080