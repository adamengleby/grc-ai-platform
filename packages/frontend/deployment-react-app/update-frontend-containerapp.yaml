properties:
  template:
    containers:
    - image: mcr.microsoft.com/azure-functions/node:4-node20-appservice
      name: grc-frontend-simple
      env:
      - name: NODE_ENV
        value: production
      - name: PORT
        value: "8080"
      - name: VITE_API_BASE_URL
        value: "https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io/api/v1"
      command: ["/bin/sh"]
      args: ["-c", "cat > package.json << 'PACKAGE_EOF'
{
  \"name\": \"grc-frontend-react\",
  \"version\": \"1.0.0\",
  \"main\": \"server.js\",
  \"dependencies\": {
    \"express\": \"^4.19.2\",
    \"compression\": \"^1.7.4\"
  },
  \"scripts\": {
    \"start\": \"node server.js\"
  }
}
PACKAGE_EOF
npm install && cat > server.js << 'SERVER_EOF'
const express = require('express');
const path = require('path');
const compression = require('compression');
const app = express();
app.use(compression());
app.use(express.static('.', {
  setHeaders: (res, filepath) => {
    if (filepath.endsWith('.js')) { res.setHeader('Content-Type', 'application/javascript'); }
    if (filepath.endsWith('.css')) { res.setHeader('Content-Type', 'text/css'); }
    if (filepath.includes('/assets/')) { res.setHeader('Cache-Control', 'public, max-age=31536000'); }
  }
}));
app.get('/health', (req, res) => {
  res.json({ status: 'healthy', service: 'GRC AI Platform - React Frontend', timestamp: new Date().toISOString(), environment: 'Azure Container Apps', region: 'Australia Southeast', backend: process.env.VITE_API_BASE_URL, assetsLoaded: require('fs').existsSync('./assets/index-BrS90hKE.js') });
});
app.get('*', (req, res) => { res.sendFile(path.join(__dirname, 'index.html')); });
const port = process.env.PORT || 8080;
app.listen(port, () => { console.log('ðŸš€ GRC AI Platform Frontend on port', port); });
SERVER_EOF
cat > index.html << 'HTML_EOF'
<!DOCTYPE html>
<html lang=\"en\">
<head>
<meta charset=\"UTF-8\" />
<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />
<title>RMX AI Hub - Multi-Tenant SaaS Platform</title>
<style>:root{--background:0 0% 99.5%;--foreground:220 13% 20%;--primary:221 83% 53%;--primary-foreground:0 0% 100%;}</style>
<script type=\"module\" crossorigin src=\"/assets/index-BrS90hKE.js\"></script>
<link rel=\"stylesheet\" crossorigin href=\"/assets/index-SeoJpoEb.css\">
</head>
<body><div id=\"root\"></div></body>
</html>
HTML_EOF
mkdir -p assets && echo 'ðŸ“¥ Loading React assets...' && curl -f -L -o assets/index-BrS90hKE.js 'https://raw.githubusercontent.com/adamengleby/grc-ai-platform/main/packages/frontend/dist/assets/index-BrS90hKE.js' || echo 'ðŸ”„ Creating loading fallback...' && cat > assets/index-BrS90hKE.js << 'FALLBACK_EOF'
document.getElementById('root').innerHTML = '<div style=\"display:flex;align-items:center;justify-content:center;min-height:100vh;font-family:system-ui\"><div style=\"text-align:center\"><h1 style=\"color:#4f46e5\">ðŸš€ GRC AI Platform</h1><p style=\"color:#6b7280\">React application loading...</p><div style=\"width:40px;height:40px;border:4px solid #e5e7eb;border-top:4px solid #4f46e5;border-radius:50%;animation:spin 1s linear infinite;margin:20px auto\"></div><style>@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}</style><p style=\"color:#9ca3af;font-size:14px\">Azure Container Apps â€¢ Australia Southeast</p></div></div>';
FALLBACK_EOF
curl -f -L -o assets/index-SeoJpoEb.css 'https://raw.githubusercontent.com/adamengleby/grc-ai-platform/main/packages/frontend/dist/assets/index-SeoJpoEb.css' || echo '/* Loading styles */' > assets/index-SeoJpoEb.css && echo 'âœ… Setup complete' && node server.js"]
      resources:
        cpu: 0.75
        memory: 1.5Gi
    scale:
      minReplicas: 1
      maxReplicas: 3
  configuration:
    ingress:
      external: true
      targetPort: 8080
