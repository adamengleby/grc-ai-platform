location: australiasoutheast
name: grc-frontend-simple
resourceGroup: rg-grc-ai-platform-syd
type: Microsoft.App/containerApps
properties:
  environmentId: /subscriptions/2e6b5431-6d83-4072-8ccc-86af69cf22b0/resourceGroups/rg-grc-ai-platform-syd/providers/Microsoft.App/managedEnvironments/grc-containerapp-env
  configuration:
    ingress:
      external: true
      targetPort: 8080
  template:
    containers:
    - name: grc-frontend-simple
      image: mcr.microsoft.com/azure-functions/node:4-node20-appservice
      resources:
        cpu: 1.0
        memory: 2Gi
        ephemeralStorage: 4Gi
      env:
      - name: NODE_ENV
        value: "production"
      - name: PORT
        value: "8080"
      - name: VITE_API_BASE_URL
        value: "https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io/api/v1"
      command:
      - /bin/bash
      args:
      - -c
      - |
        set -e
        echo "🚀 GRC Frontend v1.2.0 - CLEAN READY (frontend updated for clean URLs)..."

        # Install required tools
        apt-get update -qq
        apt-get install -y git curl

        # Clone latest code with clean URL updates
        echo "📥 Cloning latest code with clean URL updates..."
        rm -rf /tmp/repo 2>/dev/null || true
        git clone --depth 1 https://github.com/adamengleby/grc-ai-platform.git /tmp/repo
        cd /tmp/repo

        echo "📋 Latest commit:"
        git log -1 --oneline

        cd packages/frontend

        echo "🔍 Verifying frontend clean URL updates..."
        if grep -q "grc-backend\.calmmeadow" src/services/apiClient.ts; then
          echo "✅ Frontend configured for clean backend URLs"
        else
          echo "⚠️  Frontend still has simple URLs - will work with current backend"
        fi

        echo "📦 Installing dependencies..."
        NODE_ENV=development npm install

        echo "🔧 Building React application v1.2.0 (clean ready)..."
        echo "API Base URL: $VITE_API_BASE_URL"

        # Build with current working backend URL
        VITE_API_BASE_URL="https://grc-backend-simple.calmmeadow-5080198e.australiasoutheast.azurecontainerapps.io/api/v1" npm run build

        echo "✅ Build completed."
        ls -la dist/

        # Set up production server
        echo "🚚 Setting up production server..."
        mkdir -p /app
        cp -r dist/* /app/
        cd /app

        # Create production package.json
        cat > package.json << 'EOF'
        {
          "name": "grc-frontend",
          "version": "1.2.0",
          "main": "server.js",
          "dependencies": {
            "express": "^4.19.2"
          }
        }
        EOF

        npm install

        # Create Express server with clean naming
        cat > server.js << 'EOF'
        const express = require('express');
        const path = require('path');
        const app = express();

        // Log requests
        app.use((req, res, next) => {
          console.log(`${new Date().toISOString()} ${req.method} ${req.path}`);
          next();
        });

        // Serve static files
        app.use(express.static('.'));

        // Health check with clean naming preparation
        app.get('/health', (req, res) => {
          res.json({
            status: 'healthy',
            service: 'GRC Frontend - Clean URLs Ready',
            version: '1.2.0-clean-ready',
            timestamp: new Date().toISOString(),
            apiBaseUrl: process.env.VITE_API_BASE_URL,
            features: [
              'Frontend prepared for clean URLs',
              'Clean backend URL references in code',
              'Ready for grc-backend migration',
              'Dual version footer working',
              'Client-side data loading fixed'
            ]
          });
        });

        // SPA fallback
        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'index.html'));
        });

        const port = process.env.PORT || 8080;
        app.listen(port, () => {
          console.log('🚀 GRC Frontend v1.2.0 (Clean URLs Ready) running on port', port);
          console.log('🔗 API Base URL:', process.env.VITE_API_BASE_URL);
          console.log('✅ v1.2.0 CLEAN READY FEATURES:');
          console.log('  ✅ Frontend code prepared for grc-backend');
          console.log('  ✅ Clean URL references in source code');
          console.log('  ✅ Client-side data loading working');
          console.log('  ✅ Ready for backend migration');
        });
        EOF

        echo "🧹 Cleaning up..."
        rm -rf /tmp/repo

        echo "🎉 Starting GRC Frontend v1.2.0 - Clean URLs Ready..."
        node server.js
    scale:
      minReplicas: 1
      maxReplicas: 2