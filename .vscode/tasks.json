{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "npm: install",
      "type": "shell",
      "command": "npm",
      "args": ["install"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: install:all",
      "type": "shell",
      "command": "npm",
      "args": ["run", "install:all"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: build",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "npm: build - packages/frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build", "--workspace=@grc-ai-platform/frontend"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "npm: build - packages/mcp-server",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build", "--workspace=@grc-ai-platform/mcp-server"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "npm: build - packages/backend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "build", "--workspace=@grc-ai-platform/backend"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "npm: dev",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "npm: dev - packages/frontend",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev", "--workspace=@grc-ai-platform/frontend"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "npm: dev:mcp",
      "type": "shell",
      "command": "npm",
      "args": ["run", "dev:mcp"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "npm: test",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: test:coverage",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:coverage"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "npm: lint",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "npm: lint:fix",
      "type": "shell",
      "command": "npm",
      "args": ["run", "lint:fix"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$eslint-stylish"]
    },
    {
      "label": "npm: type-check",
      "type": "shell",
      "command": "npm",
      "args": ["run", "type-check"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": ["$tsc"]
    },
    {
      "label": "npm: clean",
      "type": "shell",
      "command": "npm",
      "args": ["run", "clean"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Build",
      "type": "shell",
      "command": "docker",
      "args": ["build", "-t", "grc-ai-platform", "."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Run Development",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "-d"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Azure: Deploy Function App",
      "type": "shell",
      "command": "func",
      "args": ["azure", "functionapp", "publish", "${input:functionAppName}"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Security: Audit Dependencies",
      "type": "shell",
      "command": "npm",
      "args": ["audit", "--audit-level", "moderate"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Multi-Tenant: Setup Test Environment",
      "type": "shell",
      "command": "npm",
      "args": ["run", "setup:test-tenant"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "MCP: Test Server Connection",
      "type": "shell",
      "command": "npm",
      "args": ["run", "test:mcp-connection"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ],
  "inputs": [
    {
      "id": "functionAppName",
      "description": "Azure Function App Name",
      "default": "grc-ai-platform-dev",
      "type": "promptString"
    },
    {
      "id": "tenantId",
      "description": "Tenant ID for testing",
      "default": "test-tenant-001",
      "type": "promptString"
    },
    {
      "id": "environment",
      "description": "Environment to deploy to",
      "default": "development",
      "type": "pickString",
      "options": [
        "development",
        "staging",
        "production"
      ]
    }
  ]
}